import os
import re
import logging
from pyrogram import Client, filters
from yt_dlp import YoutubeDL

# Logging setup
logging.basicConfig(level=logging.INFO)

# Environment variables
BOT_TOKEN = os.getenv("BOT_TOKEN", "7878501468:AAHwa1_Lq-PgHlMvf80VuEfrOcMNzuP3CSY")
API_ID = int(os.getenv("API_ID", "28982243"))
API_HASH = os.getenv("API_HASH", "c4cba546fd17ca535b0880a0c3ab7e9b")

# Create downloads directory if it doesn't exist
os.makedirs("downloads", exist_ok=True)

# Bot client
app = Client("kr_premium_downloader",
             bot_token=BOT_TOKEN,
             api_id=API_ID,
             api_hash=API_HASH)


# Start command
@app.on_message(filters.command("start"))
async def start(client, message):
    await message.reply_text(
        "**üåü ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ KR Premium Downloader ‡¶è!**\n\n"
        "**‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶° ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ:**\n"
        "üé• YouTube\n"
        "üìò Facebook\n\n"
        "**‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®:**\n"
        "üìπ ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶° ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®\n\n"
        "**‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:**\n"
        "‚Ä¢ `https://youtu.be/abc123`\n"
        "‚Ä¢ `https://facebook.com/video123`",
        quote=True)


def is_supported_url(url):
    """Check if URL is from supported platforms"""
    url_lower = url.lower()
    supported_domains = [
        'youtube.com', 'youtu.be', 'youtube-nocookie.com',
        'facebook.com', 'fb.watch', 'm.facebook.com'
    ]
    return any(domain in url_lower for domain in supported_domains)


def get_downloader_config():
    """Get YouTube/Facebook optimized downloader configuration"""
    return {
        'outtmpl': 'downloads/%(title)s.%(ext)s',
        'format': 'best[filesize<50M]/best',
        'http_headers': {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
            'Accept-Language': 'en-us,en;q=0.5',
        },
        'sleep_interval': 1,
        'no_warnings': True,
        'ignoreerrors': False,
    }


# Link handler
@app.on_message(filters.text & ~filters.command(["start"]))
async def video_downloader(client, message):
    """Handle video downloads from text messages"""
    url = message.text.strip()
    await download_content(client, message, url)


async def download_content(client, message, url):
    """Common download function for both video and audio"""
    # Check if it's a valid URL
    if not re.match(r'https?://', url):
        await message.reply_text("‚ö†Ô∏è ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶†‡¶ø‡¶ï ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡¶®!")
        return

    # Check if URL is from supported platforms
    if not is_supported_url(url):
        await message.reply_text(
            "‚ùå ‡¶è‡¶á ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º ‡¶®‡¶æ!\n\n"
            "**‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü‡ßá‡¶° ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ:**\n"
            "üé• YouTube (youtube.com, youtu.be)\n"
            "üìò Facebook (facebook.com, fb.watch)\n\n"
            "‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá YouTube ‡¶¨‡¶æ Facebook ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§")
        return

    await message.reply_text("üîÑ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...")

    try:
        # Detect platform for user feedback
        url_lower = url.lower()
        if 'youtube' in url_lower or 'youtu.be' in url_lower:
            platform = "YouTube"
            await message.reply_text("üé• YouTube ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶ø‡¶ü‡ßá‡¶ï‡ßç‡¶ü ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá...")
        elif 'facebook' in url_lower or 'fb.watch' in url_lower:
            platform = "Facebook"
            await message.reply_text("üìò Facebook ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶ø‡¶ü‡ßá‡¶ï‡ßç‡¶ü ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá...")

        # Download with optimized settings
        ydl_opts = get_downloader_config()

        with YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            file_path = ydl.prepare_filename(info)

        if os.path.exists(file_path):
            file_size = os.path.getsize(file_path) / (1024 * 1024)  # Convert to MB

            await message.reply_video(
                file_path, 
                caption=f"‚úÖ üé• ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®! ({file_size:.1f}MB)\n\n"
                       f"üì± KR Premium Downloader"
            )

            # Clean up
            os.remove(file_path)
        else:
            await message.reply_text("‚ùå ‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!")

    except Exception as e:
        error_msg = str(e).lower()

        if "rate" in error_msg or "limit" in error_msg or "429" in error_msg:
            await message.reply_text(
                "‚ùå ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶∏‡ßç‡¶§ ‡¶Ü‡¶õ‡ßá!\n\n"
                "**‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:**\n"
                "‚è∞ 5-10 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®")
        elif "private" in error_msg or "unavailable" in error_msg:
            await message.reply_text(
                "‚ùå ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶¨‡¶æ ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß ‡¶®‡ßá‡¶á!\n\n"
                "**‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:**\n"
                "üîì ‡¶™‡¶æ‡¶¨‡¶≤‡¶ø‡¶ï ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®")
        elif "age" in error_msg or "sign" in error_msg:
            await message.reply_text(
                "‚ùå ‡¶è‡¶á ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü‡¶ü‡¶ø ‡¶¨‡¶Ø‡¶º‡¶∏ ‡¶∏‡ßÄ‡¶Æ‡¶æ‡¶¨‡¶¶‡ßç‡¶ß‡¶§‡¶æ ‡¶¨‡¶æ ‡¶∏‡¶æ‡¶á‡¶®-‡¶á‡¶® ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®!\n\n"
                "**‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®:**\n"
                "üë∂ ‡¶∏‡¶∞‡ßç‡¶¨‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®")
        else:
            await message.reply_text(
                f"‚ùå ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!\n\n"
                "**‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂:**\n"
                "üéØ YouTube ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡¶∞‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø\n"
                "üì± ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü‡¶ü‡¶ø ‡¶™‡¶æ‡¶¨‡¶≤‡¶ø‡¶ï ‡¶ï‡¶ø ‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®")


# Run bot
app.run()